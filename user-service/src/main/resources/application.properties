spring.datasource.url=jdbc:mysql://root:BDDDTuFRLqGzoevNBRCdhJubUEocVLrS@shuttle.proxy.rlwy.net:35870/railway
spring.datasource.username=root
spring.datasource.password=BDDDTuFRLqGzoevNBRCdhJubUEocVLrS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA e Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

server.port=8081

#spring.security.user.name=admin
#spring.security.user.password=admin123
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#server.port=80
#
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CI}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CS}



# --- CONFIGURAÇÃO PARA DOCKER (VARIÁVEIS DE AMBIENTE) ---
# Ao subir via Docker, essas variáveis devem vir do container
# spring.datasource.url=${SPRING_DATASOURCE_URL}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# --- CONFIGURAÇÃO LOCAL (DESENVOLVIMENTO) ---
# Para rodar localmente com Docker Compose
# spring.datasource.url=jdbc:mysql://localhost:3307/entrequizdev_mysql
# spring.datasource.username=root
# spring.datasource.password=admin123

# --- JWT (descomente e configure quando for implementar) ---
# security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# security.jwt.expiration-time=3600000

# --- KAFKA (descomente quando for usar) ---
# spring.kafka.bootstrap-servers=localhost:9092
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.topic.bora-praticar=topic_bora_praticar_kafka
