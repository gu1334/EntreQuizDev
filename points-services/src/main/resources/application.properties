# --- AMBIENTE DE PRODUÇÃO (Railway) ---
spring.datasource.url=jdbc:mysql://root:BDDDTuFRLqGzoevNBRCdhJubUEocVLrS@shuttle.proxy.rlwy.net:35870/railway
spring.datasource.username=root
spring.datasource.password=BDDDTuFRLqGzoevNBRCdhJubUEocVLrS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA e Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

server.port=8083

# No seu application.properties

# Endereço do seu servidor Kafka. Se estiver rodando localmente, é geralmente assim:
spring.kafka.bootstrap-servers=localhost:9092

# ID do grupo de consumidores. Todos os consumidores que fazem parte do mesmo grupo
# compartilham as mensagens de um tópico.
spring.kafka.consumer.group-id=points-service-group

# Estratégia de desserialização da chave e do valor da mensagem.
# Assumimos que o valor da sua mensagem será um JSON que mapeia para o DTO.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Auto-commit de offsets. Isso faz com que o consumidor "lembre" onde parou de ler.
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest

# No seu application.properties do points-services
# ANTES:
# spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.entrequizdev.points.dto
# spring.kafka.consumer.properties.spring.json.value.default.type=br.com.entrequizdev.points.dto.UpdatePointsRequestDTO

# DEPOIS:
spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.entrequizdev.shared.dto
spring.kafka.consumer.properties.spring.json.value.default.type=br.com.entrequizdev.shared.dto.UpdatePointsRequestDTO